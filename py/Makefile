
clean:
	rm -rf gen-py
	rm -f src/streamcorpus/ttypes.py
	rm -f src/streamcorpus/constants.py
	rm -f src/streamcorpus/ttypes_v0_1_0.py
	rm -f src/streamcorpus/constants_v0_1_0.py
	rm -rf build dist
	rm -f runtests.py

.PHONY : build
build: clean
	## The 'right' thing to do here is apparently to use the
	## 'namespace' functionality in python setup tools.  However,
	## this is not yet adopted into core python and has some
	## kludgy sounding stuff about using __init__.py for the sole
	## purpose of causing (tricking?) python to looking further
	## through sys.path if it fails to find a component in the
	## first module with the requested name.  Instead of taking a
	## depency on that, we maintain control of the kludge here in
	## this Makefile by copying the code files generated by
	## thrift into our working tree and not the empty __init__.py
	## files from thrift.
	thrift --gen py:new_style,slots ../if/streamcorpus.thrift
	cp gen-py/streamcorpus/constants.py src/streamcorpus/.
	cp gen-py/streamcorpus/ttypes.py src/streamcorpus/.
	rm -rf gen-py

	## build the older thrift objects, so we can read them
	thrift --gen py:new_style,slots ../if/streamcorpus-v0_1_0.thrift
	cp gen-py/kba/constants.py src/streamcorpus/constants_v0_1_0.py
	cp gen-py/kba/ttypes.py    src/streamcorpus/ttypes_v0_1_0.py
	rm -rf gen-py

install: build 
	## I think this `clean --all` step removes existing versions
	## from site-packages that would conflict when we install
	python setup.py clean --all
	python setup.py install

test: 
	py.test --genscript=runtests.py
	python runtests.py -s

build_eggs: build
	python setup.py bdist_egg

build_packages: build_eggs
	python setup.py bdist_rpm

register: build
	python setup.py register sdist upload
